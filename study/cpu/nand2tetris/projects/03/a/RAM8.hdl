// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // 선택(0 ~ 7 address인 레지스터를 선택하는 기능)
    DMux8Way(in=true, sel=address, a=adr0, b=adr1, c=adr2, d=adr3, e=adr4, f=adr5, g=adr6, h=adr7);

    And(a=adr0, b=load, out=load0);
    And(a=adr1, b=load, out=load1);
    And(a=adr2, b=load, out=load2);
    And(a=adr3, b=load, out=load3);
    And(a=adr4, b=load, out=load4);
    And(a=adr5, b=load, out=load5);
    And(a=adr6, b=load, out=load6);
    And(a=adr7, b=load, out=load7);

    Register(in=in, load=load0, out=out0);
    Register(in=in, load=load1, out=out1);
    Register(in=in, load=load2, out=out2);
    Register(in=in, load=load3, out=out3);
    Register(in=in, load=load4, out=out4);
    Register(in=in, load=load5, out=out5);
    Register(in=in, load=load6, out=out6);
    Register(in=in, load=load7, out=out7);

    Mux8Way16(a=out0, b=out1, c=out2, d=out3, e=out4, f=out5, g=out6, h=out7, sel=address, out=out);
}