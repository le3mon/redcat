function String.new 1
push constant 0
call Memory.alloc 1
pop pointer 0
push argument 0
pop static 2
push argument 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
call Array.new 1
pop static 0
goto IF_END0
label IF_FALSE0
push argument 0
call Array.new 1
pop static 0
label IF_END0
push constant 0
pop static 1
label WHILE_EXP0
push local 0
push argument 0
lt
not
if-goto WHILE_END0
push local 0
push static 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push pointer 0
return
function String.dispose 0
push argument 0
pop pointer 0
push static 0
call Array.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function String.length 3
push argument 0
pop pointer 0
push constant 0
pop local 0
push constant 0
pop local 1
push constant 0
pop local 2
label WHILE_EXP0
push local 1
push static 2
lt
not
if-goto WHILE_END0
push local 1
push static 0
add
pop pointer 1
push that 0
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push constant 1
add
pop local 0
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function String.charAt 0
push argument 0
pop pointer 0
push argument 1
push static 0
add
pop pointer 1
push that 0
return
function String.setCharAt 0
push argument 0
pop pointer 0
push argument 1
push static 0
add
push argument 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function String.appendChar 0
push argument 0
pop pointer 0
push static 1
push static 0
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 1
push constant 1
add
pop static 1
push pointer 0
return
function String.eraseLastChar 1
push argument 0
pop pointer 0
push static 2
push constant 1
sub
pop local 0
label WHILE_EXP0
push local 0
push constant 1
neg
lt
not
if-goto WHILE_END0
push local 0
push static 0
add
pop pointer 1
push that 0
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push static 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
label IF_FALSE0
push local 0
push constant 1
sub
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function String.intValue 4
push argument 0
pop pointer 0
push constant 0
pop local 0
push constant 1
pop local 1
push constant 0
pop local 2
push constant 0
pop local 3
label WHILE_EXP0
push local 0
push static 2
lt
not
if-goto WHILE_END0
push local 0
push static 0
add
pop pointer 1
push that 0
push constant 47
gt
push local 0
push static 0
add
pop pointer 1
push that 0
and
push constant 58
lt
push local 0
push static 0
add
pop pointer 1
push that 0
or
push constant 45
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push static 0
add
pop pointer 1
push that 0
push constant 45
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 1
pop local 3
goto IF_END1
label IF_FALSE1
push local 2
push local 0
push static 0
add
pop pointer 1
push that 0
push constant 48
sub
push local 1
call Math.multiply 2
add
pop local 2
push local 1
push constant 10
call Math.multiply 2
pop local 1
label IF_END1
goto IF_END0
label IF_FALSE0
push local 3
push constant 1
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 2
neg
pop local 2
label IF_FALSE2
push local 2
return
label IF_END0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 2
return
function String.setInt 4
push argument 0
pop pointer 0
push constant 0
pop local 0
push constant 0
pop local 1
push constant 10000
pop local 2
push constant 0
pop local 3
push argument 1
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push static 0
add
push constant 45
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
pop local 1
label IF_FALSE0
label WHILE_EXP0
push local 2
push constant 1
lt
not
if-goto WHILE_END0
push local 2
push argument 1
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 1
push local 2
call Math.divide 2
pop local 3
push local 1
push static 0
add
push local 3
push constant 48
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
label IF_FALSE1
push local 2
push constant 10
call Math.divide 2
pop local 2
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function String.newLine 0
push constant 128
return
function String.backSpace 0
push constant 129
return
function String.doubleQuote 0
push constant 34
return
