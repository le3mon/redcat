// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Math.jack

/**
 * A library of commonly used mathematical functions.
 * Note: Jack compilers implement multiplication and division using OS method calls.
 */
class Math {
    static Array two_to_the;

    /** Initializes the library. */
    function void init() {
        var int i, j;

        let two_to_the = Array.new(16);
        let i = 0;
        let j = 1;
        while (i < 16) {
            let two_to_the[i] = j;
            let j = j + j;
            let i = i + 1;
        }

        return;
    }

    function int bit(int x, int idx) {
        return (two_to_the[idx] & x) > 0;
    }

    /** Returns the absolute value of x. */
    function int abs(int x) {
        if (x < 0) {
            return -x;
        }
        else {
            return x;
        }
    }

    /** Returns the product of x and y. 
     *  When a Jack compiler detects the multiplication operator '*' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x*y and multiply(x,y) return the same value.
     */
    function int multiply(int x, int y) {
        var int sum, shifted, n, tmp, i, abs_x, abs_y;
        let sum = 0;
        let i = 0;

        if ((x = 0) | (y = 0)) {
            return 0;
        }

        let abs_x = Math.abs(x);
        let abs_y = Math.abs(y);
        let shifted = abs_x;

        while (i < 16) {
            if (Math.bit(abs_y, i)) {
                let sum = sum + shifted;
            }

            let shifted = shifted + shifted;
            let i = i + 1;
        }

        if ((x < 0 & y > 0) | (x > 0 & y < 0)) {
            return -sum;
        }

        return sum;
    }

    /** Returns the integer part of x/y.
     *  When a Jack compiler detects the multiplication operator '/' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x/y and divide(x,y) return the same value.
     */
    function int divide(int x, int y) {
        var int q, abs_x, abs_y;

        let abs_x = Math.abs(x);
        let abs_y = Math.abs(y);

        if (abs_y > abs_x) {
            return 0;
        }

        let q = Math.divide(abs_x, abs_y * 2);
        // let tmp = abs_x - Math.multiply(q + q, abs_y);
        if ((abs_x - (2 * q * abs_y)) < abs_y) {
            if ((x < 0 & y > 0) | (x > 0 & y < 0)) {
                let q = -q;
            }
            return q * 2;
        }
        else {
            if ((x < 0 & y > 0) | (x > 0 & y < 0)) {
                let q = -q;
            }
            return (q * 2) + 1;
        }
    }


    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
        var int q, qq, i, n;
        let i = 7;
        let n = 0;
        while (i > -1) {
            let q = n + two_to_the[i];
            let qq = q * q;
            if ((qq > 0) & ((qq < x) | (qq = x))) {
                let n = q;
            }
            let i = i - 1;
        }
        return n;
    }

    /** Returns the greater number. */
    function int max(int a, int b) {
        if (a < b) {
            return b;
        }
        else {
            return a;
        }
    }

    /** Returns the smaller number. */
    function int min(int a, int b) {
        if (a < b) {
            return a;
        }
        else {
            return b;
        }
    }
}
